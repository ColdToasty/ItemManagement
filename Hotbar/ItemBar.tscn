[gd_scene load_steps=6 format=2]

[ext_resource path="res://Hotbar/ItemFrame.png" type="Texture" id=1]
[ext_resource path="res://Hotbar/HotBarFrame.png" type="Texture" id=2]
[ext_resource path="res://Inventory/Slots.cs" type="Script" id=3]

[sub_resource type="CSharpScript" id=2]
script/source = "using Godot;
using System;

public class ItemBar : Node2D
{
    public GridContainer hotBar;
    public Texture currentTexture;
    public Texture defaultTexture;
    public StyleBoxTexture currentBoxTexture;
    
    public StyleBoxTexture defaultBoxTexture;
     public Item holding_item = null;

    private int index = 0;

    public override void _Ready()
    {
        currentBoxTexture = new StyleBoxTexture();
        defaultBoxTexture = new StyleBoxTexture();


        currentTexture = (Texture)GD.Load(\"res://Hotbar/ItemPresentOutline.png\"); 
        defaultTexture = (Texture)GD.Load(\"res://Hotbar/ItemFrame.png\"); 
        
        currentBoxTexture.Texture = currentTexture;
        defaultBoxTexture.Texture = defaultTexture;
        
        hotBar = GetNode<GridContainer>(\"GridContainer\");


        foreach(Slots slot in hotBar.GetChildren()){
            slot.Connect(\"pickUpItem\", this, \"slot_gui_input\");
        }

    }

    public void slot_gui_input(InputEventMouseButton e, Slots slot){
        if(e is InputEventMouseButton){
            if(e.ButtonIndex == (int)ButtonList.Left && e.Pressed){
                //If we are holding on an item
                if(holding_item != null){
                    //If the location we want to place our item into is empty
                    if(slot.inventoryItem == null){
                        slot.PutIntoSlot(holding_item);
                        holding_item = null;
                    }
                    //If an item is already present
                    else if (slot.inventoryItem != null){
                        Item tempItem = slot.inventoryItem;
                        slot.pickFromSlot();
                        tempItem.Position = new Vector2(GetGlobalMousePosition().x-12,GetGlobalMousePosition().y-12);
                        slot.PutIntoSlot(holding_item);
                        holding_item = tempItem;
                }
                }
                //If we want to pick up item with nothing in \"hand\"
                else if (slot.inventoryItem != null){
                    holding_item = slot.inventoryItem;
                    slot.pickFromSlot();
                    holding_item.GlobalPosition = new Vector2(GetGlobalMousePosition().x-12,GetGlobalMousePosition().y-12);
                }


            }


        }
    }


    public override void _Input(InputEvent @event)
    {
        if(holding_item != null){
            holding_item.GlobalPosition = new Vector2(GetGlobalMousePosition().x-12,GetGlobalMousePosition().y-12);
        }
    }

}



"

[sub_resource type="StyleBoxTexture" id=1]
texture = ExtResource( 1 )
region_rect = Rect2( 0, 0, 16, 16 )

[node name="HotBar" type="Node2D"]
script = SubResource( 2 )

[node name="TextureRect" type="TextureRect" parent="."]
margin_left = 8.0
margin_top = 72.0
margin_right = 353.0
margin_bottom = 112.0
rect_min_size = Vector2( 345, 40 )
texture = ExtResource( 2 )
stretch_mode = 1

[node name="GridContainer" type="GridContainer" parent="."]
margin_left = 13.0
margin_top = 77.0
margin_right = 353.0
margin_bottom = 107.0
rect_min_size = Vector2( 340, 30 )
columns = 10

[node name="Slot1" type="Panel" parent="GridContainer"]
margin_right = 30.0
margin_bottom = 30.0
rect_min_size = Vector2( 30, 30 )
custom_styles/panel = SubResource( 1 )
script = ExtResource( 3 )

[node name="Slot2" type="Panel" parent="GridContainer"]
margin_left = 34.0
margin_right = 64.0
margin_bottom = 30.0
rect_min_size = Vector2( 30, 30 )
custom_styles/panel = SubResource( 1 )
script = ExtResource( 3 )

[node name="Slot3" type="Panel" parent="GridContainer"]
margin_left = 68.0
margin_right = 98.0
margin_bottom = 30.0
rect_min_size = Vector2( 30, 30 )
custom_styles/panel = SubResource( 1 )
script = ExtResource( 3 )

[node name="Slot4" type="Panel" parent="GridContainer"]
margin_left = 102.0
margin_right = 132.0
margin_bottom = 30.0
rect_min_size = Vector2( 30, 30 )
custom_styles/panel = SubResource( 1 )
script = ExtResource( 3 )

[node name="Slot5" type="Panel" parent="GridContainer"]
margin_left = 136.0
margin_right = 166.0
margin_bottom = 30.0
rect_min_size = Vector2( 30, 30 )
custom_styles/panel = SubResource( 1 )
script = ExtResource( 3 )

[node name="Slot6" type="Panel" parent="GridContainer"]
margin_left = 170.0
margin_right = 200.0
margin_bottom = 30.0
rect_min_size = Vector2( 30, 30 )
custom_styles/panel = SubResource( 1 )
script = ExtResource( 3 )

[node name="Slot7" type="Panel" parent="GridContainer"]
margin_left = 204.0
margin_right = 234.0
margin_bottom = 30.0
rect_min_size = Vector2( 30, 30 )
custom_styles/panel = SubResource( 1 )
script = ExtResource( 3 )

[node name="Slot8" type="Panel" parent="GridContainer"]
margin_left = 238.0
margin_right = 268.0
margin_bottom = 30.0
rect_min_size = Vector2( 30, 30 )
custom_styles/panel = SubResource( 1 )
script = ExtResource( 3 )

[node name="Slot9" type="Panel" parent="GridContainer"]
margin_left = 272.0
margin_right = 302.0
margin_bottom = 30.0
rect_min_size = Vector2( 30, 30 )
custom_styles/panel = SubResource( 1 )
script = ExtResource( 3 )

[node name="Slot10" type="Panel" parent="GridContainer"]
margin_left = 306.0
margin_right = 336.0
margin_bottom = 30.0
rect_min_size = Vector2( 30, 30 )
custom_styles/panel = SubResource( 1 )
script = ExtResource( 3 )
